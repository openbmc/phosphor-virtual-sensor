{
  "comments": [
    {
      "key": {
        "uuid": "5bb2ea3d_a48f8337",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-05-26T13:22:17Z",
      "side": 1,
      "message": "Do you have this mapper commit that returns the xyz.openbmc_project errors? https://github.com/openbmc/phosphor-objmgr/commit/e82b05840ba633d1f0d2e301720a5af6989c91f7?",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c694966f_988e6993",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-05-27T02:11:23Z",
      "side": 1,
      "message": "Yes, the build contains this commit.\nIn my case it gets `org.freedesktop.DBus.Error.ServiceUnknown: The name is not activatable` exception, which does not seem to be handled by phosphor-objmgr.\n\nIn virtual-sensor, it already handles the case when it fails to get the service that it will retry as long as the service name string is empty.\nSo I think it\u0027s perfectly safe to return empty string here.",
      "parentUuid": "5bb2ea3d_a48f8337",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a1f223e_752d0dad",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-06-04T13:08:49Z",
      "side": 1,
      "message": "I will defer to the maintainers.",
      "parentUuid": "c694966f_988e6993",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e819bab2_c44c465a",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-04T14:30:56Z",
      "side": 1,
      "message": "Isn\u0027t the service here (the one we\u0027re getting ServiceUnknown) mapper?  Is this a systemd service file ordering problem where phosphor-virtual-sensor doesn\u0027t correctly depend on mapper?",
      "parentUuid": "5a1f223e_752d0dad",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a08bc55c_aedb0e6a",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-06-06T02:21:52Z",
      "side": 1,
      "message": "Yes, it is related to the service dependency.\n\nBefore this change, we tried:\n1. Add \"After\u003dxxx.service\" to make sure phosphor-virtual-sensor runs after the dependent service, it does not work because the dependent object is not created when the service starts, it is created after a while (e.g. a sensor is created after EM probes the i2c buses). We get the crash intermittently.\n2. Add \"After\u003dmapper-waitxxx\" to make sure phosphor-virtual-sensor runs after the dependent DBus objects appears.\nThis way works, but it has problems:\n* When we add a new virtual sensor, the \"After\u003d\" will have to add the new dependent dbus objects;\n* Due to the fact that the dbus objects are created quite late after probing the i2c buses, the phosphor-virtual-sensor will be started very late, and thus the BMC_READY state is very late.\nThis results in HW CI failure because it checkes the BMC_READY time.\n\nThis patch resolves the above issues, that phosphor-virtual-sensor does not need to add dependency to any service, it just starts, try to get the service, and retry if it fails to get it.",
      "parentUuid": "e819bab2_c44c465a",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2607943d_ac11484f",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-06T16:23:02Z",
      "side": 1,
      "message": "You misunderstand me.  This shouldn\u0027t be the result of the service providing the sensor not loaded yet, because mapper returns ResourceNotFound.  Mapper doesn\u0027t return the ServiceUnknown error you put in the commit message.\n\nThe only way, I think, we can get the ServiceUnknown error is if *mapper itself* isn\u0027t loaded yet.  _This_ is a service file issue, isn\u0027t it?  But, I see `Wants/After\u003dobmc-mapper.target` already, so I don\u0027t know what is going on.\n\nI understand \"catching all exceptions and ignoring them\" solves the problem you\u0027re seeing, but to be honest, that is really heavy handed.  I\u0027d like some more information on where the ServiceUnknown error is coming from.\n\nI suspect there might be some issues with the mapper service file itself.  Is `xyz.openbmc_project.ObjectMapper.service` missing a WantedBy\u003dobmc-mapper.target?  It looks like right now it just has a \u0027Before\u0027 but that means there is no dependency to ensure it has fully started (including the BusName being registered) before obmc-mapper.target is started.",
      "parentUuid": "a08bc55c_aedb0e6a",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb877113_fe4c2563",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-06-07T02:11:24Z",
      "side": 1,
      "message": "\u003e I\u0027d like some more information on where the ServiceUnknown error is coming from.\nYup this is the root cause, I just did not know where it comes from.\n\n\u003e I suspect there might be some issues with the mapper service file itself.  Is `xyz.openbmc_project.ObjectMapper.service` missing a WantedBy\u003dobmc-mapper.target? \n\nAlthough it does not has a `WantedBy`, the service does run before the obmc-mapper.target:\n\n # systemctl list-dependencies --after obmc-mapper.target\n obmc-mapper.target\n ● └─xyz.openbmc_project.ObjectMapper.service\n\nDo you have any suggestion on how to debug the issue? Maybe it could be related to dbus-broker?",
      "parentUuid": "2607943d_ac11484f",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec536c0_cacef2f7",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-08T11:57:55Z",
      "side": 1,
      "message": "Before/After and Wants/WantedBy are two different aspects of systemd startup.  Before/After are order.  Wants/WantedBy are requirements.\n\nIf service X is \"Before\" service Y, systemd will ensure that service X is simply launched before Y.  If service X is \"WantedBy\" service Y, systemd will ensure that the resources specified as being provided by X are available before it launches Y (and will not launch Y if those resources are never supplied).\n\nIn this case, ObjectMapper lists a BusName, which is a resource it supplies.  That BusName is what we need to be available before phosphor-virtual-sensor is launched.  By relying exclusively on ordering and not resource dependency, there is a race condition where ObjectMapper and P-V-S can be started at nearly the same time and ObjectMapper hasn\u0027t supplied its own BusName by the time P-V-S goes looking for it.\n\nThis is actually a race condition that affects nearly every daemon, but I suspect many of them use mapper-wait which ends up setting up the stronger ordering.  I think this warrants some discussion in a bigger audience (maybe mailing list?) but I suspect solving it is as simple as adding a WantedBy\u003dobmc-mapper.target in the ObjectMapper.service file.",
      "parentUuid": "eb877113_fe4c2563",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c171a1f0_79925088",
        "filename": "dbusUtils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-06-10T06:42:07Z",
      "side": 1,
      "message": "I finally got the root cause: there is *NO* obmc-mapper.target at all!\n\nThe target is expected to be installed by meta-phosphor/recipes-core/systemd/obmc-targets.bb, which just declares the dependency to \"phosphor-state-manager\". The \"phosphor-state-manager\" is the package that installs the \"obmc-mapper.target\".\n\nOn x86 systems, the state manager is usually replaced by x86-power-control, e.g.\n\n g220a.conf:VIRTUAL-RUNTIME_obmc-host-state-manager ?\u003d \"x86-power-control\"\n\nso the system does not really install the \"phosphor-state-manager\" at all, and thus the obmc-mapper.target does not exist!\n\nI tried to add the target manually and then we could see the services are really starting with the expected order, and the issue is gone.\n\nSo the question is, should x86-power-control add the target? Probably no. We really should make obmc-targets.bb to install the expected targets, is it?",
      "parentUuid": "bec536c0_cacef2f7",
      "revId": "b065d0536c28d33fc358641fce7c4aef12e4c026",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}