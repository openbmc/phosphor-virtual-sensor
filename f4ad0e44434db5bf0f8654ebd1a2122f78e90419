{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c5638fd_a7a53090",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-21T15:53:37Z",
      "side": 1,
      "message": "Please add safety around these `at` lookups.  Likely prefer `find`.",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "147f6304_d46969d4",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 896,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-21T15:53:37Z",
      "side": 1,
      "message": "This throws if calculationIface isn\u0027t found, which makes the code worse.",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828fa070_8598be0c",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 896,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-08-22T00:41:09Z",
      "side": 1,
      "message": "Nope, Because the processing has been done on line 876, I think there is no problem here.",
      "parentUuid": "147f6304_d46969d4",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d1e64c6_5bd04b37",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 896,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-22T12:07:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "828fa070_8598be0c",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c111ada_7a8ac71e",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-21T15:53:37Z",
      "side": 1,
      "message": "This throws if the interface doesn\u0027t have \"Units\", which makes the code worse.",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a410118_710fc8ff",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-08-22T00:41:09Z",
      "side": 1,
      "message": "If the interface does not have \"Units\", the if statement does not enter right?",
      "parentUuid": "6c111ada_7a8ac71e",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50a84780_fa856efa",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-22T12:07:16Z",
      "side": 1,
      "message": "Ack.\n\nThe previous code was \"better\" in that it only searched once.\n\nCan you leave this one alone (as I\u0027m not sure what you\u0027re accomplishing by getting rid of the `find`) and make the one one 896/876 collapse to one search?",
      "parentUuid": "3a410118_710fc8ff",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73ac6808_c76bce43",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-08-23T00:40:06Z",
      "side": 1,
      "message": "I think `map::find` and `map::contains` are equal[1], it\u0027s just that after c++20, we tend to use the latter to make the code more concise and clear.\n\n[1] https://stackoverflow.com/questions/64167338/container-contains-function\n```\ntemplate\u003ctypename M, typename T\u003e\nbool contains(M const \u0026map, T const \u0026element) {\n  return map.find(element) !\u003d map.end();\n}\n```\n\n\u003e  make the one one 896/876 collapse to one search?\n\nYes, The previous logic is that the for loop will be executed twiceã€‚",
      "parentUuid": "50a84780_fa856efa",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4808d2a6_bfd3447a",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-23T11:24:31Z",
      "side": 1,
      "message": "I know what `contains` does.  My problem is that you are doing a `contains` + `at`.  This is equivalent, from a performance perspective, to running two `find` operations.  Please refactor to only use a single `find`.",
      "parentUuid": "73ac6808_c76bce43",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37a163b6_0c0aa31d",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-08-24T00:08:56Z",
      "side": 1,
      "message": "Thanks Patrick\nThis may be something I haven\u0027t considered\nDone",
      "parentUuid": "4808d2a6_bfd3447a",
      "revId": "f4ad0e44434db5bf0f8654ebd1a2122f78e90419",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}