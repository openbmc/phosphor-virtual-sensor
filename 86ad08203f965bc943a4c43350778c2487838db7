{
  "comments": [
    {
      "key": {
        "uuid": "70e83563_1956a64e",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-07-09T17:54:16Z",
      "side": 1,
      "message": "It sounds like Patrick wants the actual threshold names here instead of these mysterious ones that entity-manager/dbus-sensors/etc all use.\n\nAs it stands now, since the entity-manager schema for Thresholds is all strings and no enums, it would not take any schema changes to do this, so I guess maybe it\u0027s the way to go.",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "814d3c16_7f1c575b",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-09T18:17:53Z",
      "side": 1,
      "message": "This code doesn\u0027t even look correct for the \"mysterious\" entity-manager/dbus-sensors ones.  We should not be doing direct matching on name.  Name is an opaque thing that the user can name whatever they want.  We should be keying off direction and severity.\n\nThis is all handled today with code in dbus-sensors;  At most you should be building something similar to it:\nhttps://github.com/openbmc/dbus-sensors/blob/12c2c0ef533842d2e66f8c82c6b586f6df31d577/src/Thresholds.cpp#L60\n\nI\u0027m still of the opinion that if we\u0027re not going to have a dependency on expertk expressions, phosphor-virtual-sensor is probably the wrong place to put this implementation.  Dbus-sensors already has examples of this kind of \"virtual\" sensors, and already has code for doing exactly this kind of config-to-thresholds operation that we could reuse.  If Patrick or the author wants to own maintainership an implementation in that repo, I\u0027m happy to mess around with the OWNERS files to make that happen.",
      "parentUuid": "70e83563_1956a64e",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91496bd1_d5f0d292",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-07-09T18:26:57Z",
      "side": 1,
      "message": "I call it mysterious because the entity-manager schema lists severity as an unrestricted number:  https://github.com/openbmc/entity-manager/blob/master/schemas/legacy.json#L548  instead of being a string enum, or even a number with a min and a max with a description on what those mean.",
      "parentUuid": "814d3c16_7f1c575b",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f67ed30a_06085324",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-09T18:38:38Z",
      "side": 1,
      "message": "The thresholds were created before we had json schemas for EM configs.  I think the original generation of the schemas was automated using some tool, so there\u0027s cases where they\u0027re more permissive than intended;  This is one of those cases.  I suspect the schemas could be updated to constrain Severity to min of 1 and max of 2 to be more accurate if we wanted (possibly max of 3 or 4 after we support the new threshold types).",
      "parentUuid": "91496bd1_d5f0d292",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0e916f4_2470124d",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-09T18:44:50Z",
      "side": 1,
      "message": "ps, just in case it sounded like it, I take no offense at the word \"mysterious\".  In a perfect world, we would\u0027ve made these enums the first time around, but this was a design decision that James made early on that nobody questioned at the time because every system he\u0027d ever worked on only had 2 threshold severities (yay IPMI), and they were in ascending levels of \"badness\" so an int kind of made sense.",
      "parentUuid": "f67ed30a_06085324",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7b97bdb_a21a81e6",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-07-12T06:56:06Z",
      "side": 1,
      "message": "\u003e We should not be doing direct matching on name.  Name is an opaque thing that the user can name whatever they want.  We should be keying off direction and severity.\n\n\nI can\u0027t see how the direction field is any less opaque than the name? I can\u0027t see any restrictions for either in the schema or entity-manager, what am I missing?",
      "parentUuid": "b0e916f4_2470124d",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05327329_aa5674a8",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T15:22:34Z",
      "side": 1,
      "message": "The schemas were created later, and don\u0027t fully comprehend the intent, or desired limits of the full schema.  While they\u0027re getting better, they can\u0027t yet be trusted as a source of \"what is allowed\" for a given field.\n\nPlease take a look at the dbus-sensors code for how it parses these fields, using severity, and do something similar.",
      "parentUuid": "f7b97bdb_a21a81e6",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b736ab9_ab93c45e",
        "filename": "virtualSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 532,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-07-22T11:34:51Z",
      "side": 1,
      "message": "Okay, thanks for the information.",
      "parentUuid": "05327329_aa5674a8",
      "revId": "86ad08203f965bc943a4c43350778c2487838db7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}