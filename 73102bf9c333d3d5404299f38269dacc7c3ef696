{
  "comments": [
    {
      "key": {
        "uuid": "18fcc3ee_2aedf1fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "For some reason, Gerrit is showing this commit as a merge conflict.  Maybe you need a rebase?",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0822b0b8_b361179c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "What should I be basing my commits on? openbmc master?",
      "parentUuid": "18fcc3ee_2aedf1fd",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99bcc713_3988aed6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T22:44:38Z",
      "side": 1,
      "message": "You should always base any commits to Gerrit on the most recent code merged in Gerrit.  It would be this repository\u0027s master, not openbmc master.",
      "parentUuid": "0822b0b8_b361179c",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ba2fc61_e78a0303",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "Side note, I wonder if there\u0027s a gerrit setting where we can just reject pushes that aren\u0027t rebased.",
      "parentUuid": "99bcc713_3988aed6",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a23be7da_d35d9c8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ba2fc61_e78a0303",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07deb19a_9c6e4458",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "Is it possible for us to write this code in a way that does not use an #ifdef?  I prefer we don\u0027t have them because it makes for dead code that is not compiled in CI.",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ee8965a_1f6d8532",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "Good point. From the discord discussion I gathered that Ed wanted a restriction on expressions taken from dbus, and you didn\u0027t want this restriction from your config files. I thought this was a way we could do both as I think the code you were referring to would be separate to the code that uses this change.",
      "parentUuid": "07deb19a_9c6e4458",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81fde9e9_1b09e941",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "I think what patrick is saying here is that we\u0027d like to see it selectable, similar to what phosphor-pid-control does.  If a config file exists, phosphor-pid-control uses it, otherwise it reads from dbus.\n\nAlternatively, if the code is structured such that you can do both, that seems useful too.",
      "parentUuid": "5ee8965a_1f6d8532",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0262fce0_34ad03eb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81fde9e9_1b09e941",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e111c5f_18437f16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "What does it mean to have tested using busctl?  Did you test this code or just tested the bus operations manually?",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91eb3361_94eed831",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "Yes tested manually using busctl.",
      "parentUuid": "5e111c5f_18437f16",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3aa96734_2a672332",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T22:44:38Z",
      "side": 1,
      "message": "I don\u0027t understand how this is testing then.  We would need to test this code.  How did you even exercise it with busctl since it is a client?",
      "parentUuid": "91eb3361_94eed831",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d42c77a_e335ef7b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Forgot to answer this directly - by updating the sensor values that the virtual sensor uses we can exercise the code.",
      "parentUuid": "3aa96734_2a672332",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f92eab1d_d479a081",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:32:16Z",
      "side": 1,
      "message": "Rashmica, it also appears you\u0027re missing from the IBM CI list because your commit didn\u0027t automatically get a CI triggered.",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73e4d391_9267a0e4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "Thanks for pointing this out!",
      "parentUuid": "f92eab1d_d479a081",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d8e9bbd_bfe9a944",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "It looks like the only reason you\u0027re picking up boost is for \u0027flatmap\u0027?  Just use std::map or std::hashmap.  I don\u0027t want to add a dependency on boost for something trivial.",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a47ca294_dea92522",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7d8e9bbd_bfe9a944",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea207ba3_1e30d4cb",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "+1.  Seems like a waste of a dependency just for a map.",
      "parentUuid": "a47ca294_dea92522",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6d3840e_3e78a5bf",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "ea207ba3_1e30d4cb",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e492bca_eba2e8f6",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "These don\u0027t look used?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 49
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4b4bc8b_d96208c2",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-06-29T10:47:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9e492bca_eba2e8f6",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 49
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd610fb7_4ab3829a",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "This would be a lot more efficient if just coded in a method.  As written this will construct a map on heap every startup.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 103
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a07759f0_10dafed6",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-06-17T08:30:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bd610fb7_4ab3829a",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 103
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa782097_19329386",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "This isn\u0027t the behavior I would expect.  If the sensor value is out of range, I would expect it to be clamped into range, not just simply ignored.",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04d3bb13_da441ee4",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-06-17T08:30:33Z",
      "side": 1,
      "message": "You\u0027re right.",
      "parentUuid": "fa782097_19329386",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a62a0047_c9e0f754",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "It seems very unfortunate that we hardcode this specific string all around in a bunch of if conditions.  Can that be cleaned up any?  Or at least put into something else.",
      "range": {
        "startLine": 294,
        "startChar": 0,
        "endLine": 294,
        "endChar": 36
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3613c5c_05ca1ee0",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-06-29T10:47:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a62a0047_c9e0f754",
      "range": {
        "startLine": 294,
        "startChar": 0,
        "endLine": 294,
        "endChar": 36
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58216452_3b0edfbc",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "The fact that we\u0027re just writing this out as code makes me wonder if virtual sensor is the right place to do this, as we aren\u0027t really running an \"expression\" at all, but doing code.  dbus-sensors has Exit Air sensor that I think has a lot of this math in it already, although I believe it takes the max instead of the median, I wonder if we\u0027d reduce the code if we put it there.\n\n\nApologies if I lead you astray, I was expecting that this code was going to be directly calling expertk, which is why it made sense at the time to suggest this.",
      "range": {
        "startLine": 314,
        "startChar": 0,
        "endLine": 359,
        "endChar": 1
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0a397f4_928bcad3",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-25T00:11:58Z",
      "side": 1,
      "message": "I couldn\u0027t find an exprtk function for the median and seems less complicated to write it in C++ than in the exprtk language. But you make a good point about where this code should go. Will chat to Matt to see if we can put this in dbus-sensors.",
      "parentUuid": "58216452_3b0edfbc",
      "range": {
        "startLine": 314,
        "startChar": 0,
        "endLine": 359,
        "endChar": 1
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74199338_6cdaab92",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-05-25T20:07:14Z",
      "side": 1,
      "message": "I don\u0027t see us being able to have a lot of common code between the exit air temp algorithm and this one.\nExitAirTemp:\n* hardcodes its output sensor, input power sensor, and inlet sensor names\n* uses all pwm sensors on d-bus instead of getting them from entity-manager\n* does completely different math\n\nKeeping the code in PVS, all she had to do was add a D-Bus-\u003eJSON translation layer (which it sounds like may be able to be removed), and the actual median code.  The component and output sensor management code already works, which is what I saw as the biggest draw in putting it here in the first place.\n\nIf we were to do this in dbus-sensors, I bet that others may also wish to use entity-manager for their virtual sensor configs with different canned formulas as I have seen this request on discord.",
      "parentUuid": "d0a397f4_928bcad3",
      "range": {
        "startLine": 314,
        "startChar": 0,
        "endLine": 359,
        "endChar": 1
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce4d139_93c0476e",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "I believe we discussed this in discord and this is ok to stay in p-v-s.",
      "parentUuid": "74199338_6cdaab92",
      "range": {
        "startLine": 314,
        "startChar": 0,
        "endLine": 359,
        "endChar": 1
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "139aa914_0282ca20",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "Is there corresponding code from EM for this?  Is there any YAML definition of the config?\n\nIs there any reason why we couldn\u0027t have made the EM contents the same as the existing virtual sensor config and/or change the virtual sensor config to match the proposed EM config?  I don\u0027t like having this huge blob of code that is transposing from one JSON format to another.",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f31d2d85_5d60f46c",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "I have CC\u0027d you on those changes. We can make them the same. I also assumed that there wasn\u0027t a straightforward way to make a map\u003cstring, map\u003cstring\u003e, variant\u003e into a format that the JSON library can parse, and since I was manually parsing it I figured it would be less churn to change the existing format. Will look into it.",
      "parentUuid": "139aa914_0282ca20",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dea2ea9c_b4ccb029",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "+1, transposing dbus to json just so it can be parsed is messy.  See my comments on the EM review, we\u0027ll need to change some of the interfaces to conform to how the other sensors naming conventions work on that side anyway.\n\nI suspect we\u0027ll need code to just maneuver things into the right config items in the constructor.",
      "parentUuid": "f31d2d85_5d60f46c",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e8cbe91_23ae8a06",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-06-29T10:47:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dea2ea9c_b4ccb029",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed985ed_0d5e2905",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "When reading these in, you should try to avoid using at() as it leads to throwing with no long in the case the user typos their parameter.  You might want to do something like find() and print \"X value not found\" before throwing out of this.",
      "range": {
        "startLine": 409,
        "startChar": 75,
        "endLine": 409,
        "endChar": 77
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffcc1aa1_01fa6d6c",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed985ed_0d5e2905",
      "range": {
        "startLine": 409,
        "startChar": 75,
        "endLine": 409,
        "endChar": 77
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7250d07_ec6e8fe8",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "Considering these configs are user (and attacker) facing crashing generally isn\u0027t the best plan when parsing these (I don\u0027t see the exceptions caught anywhere).",
      "range": {
        "startLine": 412,
        "startChar": 0,
        "endLine": 412,
        "endChar": 90
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce22542_3efb9c19",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7250d07_ec6e8fe8",
      "range": {
        "startLine": 412,
        "startChar": 0,
        "endLine": 412,
        "endChar": 90
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a3dc981_e83805f6",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 573,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "One solution to the #ifdef is to have a config entry that says \"get my config from EM\".  For systems that want to use EM they can just have that single entry in their virtual-sensor config.",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dd2ba7c_5c178318",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 573,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "Oh this could be a nicer way to do it.",
      "parentUuid": "6a3dc981_e83805f6",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cacdee6_39ff3737",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T12:31:03Z",
      "side": 1,
      "message": "What is this attempting to do?  Can we get some comments?\n\nYou might want to use map::contains rather than a count comparison.  (I know contains is in C++20, but it\u0027s time to upgrade all our repositories to C++20 anyhow).",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ff1888f_f1e648cb",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-05-24T22:05:48Z",
      "side": 1,
      "message": "This is so we don\u0027t add sensors with the same name. Do you think its a reasonable assumption to have unique virtual sensor names?",
      "parentUuid": "1cacdee6_39ff3737",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ef023d4_ae860433",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-05-24T22:44:38Z",
      "side": 1,
      "message": "If this is a problem we shouldn\u0027t silently drop them on the floor.  Raise this as an error or something.  (Throw an exception maybe?  At least log a log\u003clevel:ERR\u003e of what went wrong.  Something is bad if we get to this case.)",
      "parentUuid": "5ff1888f_f1e648cb",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9911c25d_cb684eec",
        "filename": "virtualSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-06-29T10:47:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9ef023d4_ae860433",
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd315c60_a482c787",
        "filename": "virtualSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "This is really up to the maintainers, but I would\u0027ve expected this in its own commit, as its testing min/max is going to be very different, also, I would expect it to apply to both kinds of configs.",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 91,
        "endChar": 37
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccad89e1_6b01a3a2",
        "filename": "virtualSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bd315c60_a482c787",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 91,
        "endChar": 37
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "375371c1_f4f3a245",
        "filename": "virtualSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T23:32:51Z",
      "side": 1,
      "message": "This is going to match EVERY interfaces added method in the entire system.  Please don\u0027t do that, please take a look at dbus sensors, and use a more efficient match expression here.\n\n\nAlso, you need to match on InterfacesRemoved as well, and appropriately clear the sensors when the configuration gets removed.",
      "range": {
        "startLine": 196,
        "startChar": 53,
        "endLine": 196,
        "endChar": 68
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73fc6e27_fe28d527",
        "filename": "virtualSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-11T02:41:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "375371c1_f4f3a245",
      "range": {
        "startLine": 196,
        "startChar": 53,
        "endLine": 196,
        "endChar": 68
      },
      "revId": "73102bf9c333d3d5404299f38269dacc7c3ef696",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}